/*
 *    Copyright 2014. Binh Nguyen
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.gradle.plugin-publish" version "0.10.0"
}

version = projectVersion
group = projectGroup

['2.10', '2.11', '2.12'].each { scalaVersion ->
    project(":gradle-scalastyle-plugin_$scalaVersion") {
        ext.scalaDist = scalaVersion
    }
}

ext {
    pluginSrc = "$rootDir/src"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

subprojects {
    apply plugin: "java"
    apply plugin: "scala"
    apply plugin: "groovy"
    apply plugin: 'maven-publish'
    apply plugin: 'com.gradle.plugin-publish'

    // JRE 1.6 should work
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    version = projectVersion
    group = projectGroup

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        compile gradleApi()
        compile localGroovy()

        compile "org.scalastyle:scalastyle_${scalaDist}:1.0.0"
        testCompile gradleTestKit()
        testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
            exclude module: 'groovy-all'
        }
        testCompile 'commons-io:commons-io:2.5'
    }

    sourceSets {
        main {
            scala {
                srcDirs = ["$pluginSrc/main/scala"]
            }
            groovy {
                srcDirs = ["$pluginSrc/main/groovy"]
                compileClasspath += files([sourceSets.main.scala.outputDir])
            }
            resources {
                srcDirs = ["$pluginSrc/main/resources"]
            }
        }
        test {
            groovy {
                srcDirs = ["$pluginSrc/test/groovy"]
            }
            resources {
                srcDirs = ["$pluginSrc/test/resources"]
            }
        }
    }

    test {
        dependsOn 'publishToMavenLocal'

        testLogging {
            showStandardStreams = true
        }
        systemProperty 'SCALA_VERSION', scalaDist
        systemProperty 'PLUGIN_VERSION', version
    }

    compileGroovy.dependsOn(compileScala)

    pluginBundle {
        def pluginDescription = 'Gradle plugin for scalastyle'

        website = 'https://github.com/alisiikh/gradle-scalaxb-plugin'
        vcsUrl = 'https://github.com/alisiikh/gradle-scalaxb-plugin'
        description = pluginDescription
        tags = ['scalastyle', 'scala', 'formatter', 'checkstyle']

        plugins {
            scalaStylePlugin {
                id = 'com.github.alisiikh.scalaStyle'
                displayName = pluginDescription
            }
        }
    }
}
